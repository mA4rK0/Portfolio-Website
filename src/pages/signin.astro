---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Sign in">
  <h1>Sign in</h1>
  <p>New here? <a href="/register">Create an account</a></p>
  <form id="signin-form">
    <label for="email">Email</label>
    <input type="email" name="email" id="email" />
    <label for="password">Password</label>
    <input type="password" name="password" id="password" />
    <button type="submit">Login</button>
  </form>
  <button id="google">Sign in with Google</button>
  <button id="anonymous">Anonymous</button>
  <p id="error-message" style="color: red;"></p>
</Layout>

<script>
  import { getAuth, inMemoryPersistence, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, signInAnonymously } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("#signin-form") as HTMLFormElement;
  const errorMessage = document.querySelector("#error-message") as HTMLParagraphElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    errorMessage.textContent = "";

    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      errorMessage.textContent = "Please enter both email and password.";
      return;
    }

    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password);
      const idToken = await userCredential.user.getIdToken();
      const response = await fetch("/api/auth/signin", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (response.ok) {
        window.location.href = "/home";
      } else {
        const errorData = await response.json();
        throw new Error(errorData.error || "An error occurred during sign in.");
      }
    } catch (error) {
      console.error("Error signing in:", error);
      errorMessage.textContent = error.message || "An error occurred during sign in.";
    }
  });

  const googleSignin = document.querySelector("#google") as HTMLButtonElement;
  googleSignin.addEventListener("click", async () => {
    try {
      const provider = new GoogleAuthProvider();
      const userCredential = await signInWithPopup(auth, provider);
      const idToken = await userCredential.user.getIdToken();
      const res = await fetch("/api/auth/signin", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (res.ok) {
        window.location.href = "/home";
      } else {
        const errorData = await res.json();
        throw new Error(errorData.error || "An error occurred during sign in.");
      }
    } catch (error) {
      console.error("Error signing in:", error);
      errorMessage.textContent = error.message || "An error occurred during sign in.";
    }
  });

  const anonymousSignIn = document.querySelector("#anonymous") as HTMLButtonElement;
  anonymousSignIn.addEventListener("click", async () => {
    try {
      const userCredential = await signInAnonymously(auth);
      const user = userCredential.user;
      const idToken = await user.getIdToken();
      const res = await fetch("/api/auth/signin", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (res.ok) {
        window.location.href = "/home";
      } else {
        const errorData = await res.json();
        throw new Error(errorData.error || "An error occurred during guest login.");
      }
    } catch (error) {
      console.error("Error during guest login:", error);
      errorMessage.textContent = error.message || "An error occurred during guest login.";
    }
  });
</script>
